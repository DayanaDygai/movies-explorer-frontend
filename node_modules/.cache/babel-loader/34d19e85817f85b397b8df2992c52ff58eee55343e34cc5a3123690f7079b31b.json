{"ast":null,"code":"var _jsxFileName = \"/Users/dayana/dev/movies-explorer-frontend/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import MoviesCard from '../MoviesCard/MoviesCard.jsx';\n// import styles from './MoviesCardList.module.css';\n\n// function MoviesCardsList({ movies, isSavedMoviesPage }) {\n//   const [savedMovies, setSavedMovies] = useState([]);\n\n//   const handleLikeClick = (movie) => {\n//     // Проверяем, есть ли уже фильм в сохраненных\n//     const isSaved = savedMovies.includes(movie);\n\n//     // Обновляем список сохраненных фильмов\n//     setSavedMovies(isSaved \n//       ? savedMovies.filter((m) => m !== movie) \n//       : [...savedMovies, movie]);\n//   };\n\n//   return (\n//     <section className={styles['movies-list']}>\n//       {movies.map((movie, index) => (\n//         <MoviesCard\n//           key={index}\n//           movieName={movie.movieName}\n//           movieImage={movie.movieImage}\n//           movieLink={movie.movieLink}\n//           onLike={() => handleLikeClick(movie)}\n//           isLiked={savedMovies.includes(movie)}\n//           movies={movies}\n//           isSavedMoviesPage={isSavedMoviesPage}\n//         />\n//       ))}\n\n//         <button\n//           className={styles[\"movies-list__more-button\"]}\n//           type=\"button\"\n//         >\n//           Ещё\n//         </button>\n\n//     </section>\n//   );\n// }\n\n// export default MoviesCardsList;\n\nimport React, { useState, useEffect } from 'react';\nimport MoviesCard from '../MoviesCard/MoviesCard.jsx';\nimport styles from './MoviesCardList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesCardsList({\n  movies,\n  isSavedMoviesPage\n}) {\n  _s();\n  const [visibleCards, setVisibleCards] = useState([]);\n  const [savedMovies, setSavedMovies] = useState([]);\n  const handleLikeClick = movie => {\n    // Проверяем, есть ли уже фильм в сохраненных\n    const isSaved = savedMovies.includes(movie);\n\n    // Обновляем список сохраненных фильмов\n    setSavedMovies(isSaved ? savedMovies.filter(m => m !== movie) : [...savedMovies, movie]);\n  };\n  useEffect(() => {\n    const setInitialVisibleCards = () => {\n      const width = window.innerWidth;\n      let initialVisibleCards;\n      if (width < 768) {\n        initialVisibleCards = 5;\n      } else if (width >= 768 && width < 1024) {\n        initialVisibleCards = 8;\n      } else {\n        initialVisibleCards = 16;\n      }\n      setVisibleCards(movies.slice(0, initialVisibleCards));\n    };\n    setInitialVisibleCards();\n    window.addEventListener('resize', setInitialVisibleCards);\n    return () => {\n      window.removeEventListener('resize', setInitialVisibleCards);\n    };\n  }, [movies]);\n  const loadMore = () => {\n    const width = window.innerWidth;\n    let additionalCards;\n    if (width < 768) {\n      additionalCards = 5;\n    } else if (width >= 768 && width < 1024) {\n      additionalCards = 8;\n    } else {\n      additionalCards = 16;\n    }\n    setVisibleCards(current => [...current, ...movies.slice(current.length, current.length + additionalCards)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles[\"movies-list\"],\n    children: [visibleCards.map((movie, index) => /*#__PURE__*/_jsxDEV(MoviesCard, {\n      movieName: movie.movieName,\n      movieImage: movie.movieImage,\n      movieLink: movie.movieLink,\n      onLike: () => handleLikeClick(movie),\n      isLiked: savedMovies.includes(movie),\n      movies: movies,\n      isSavedMoviesPage: isSavedMoviesPage\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles[\"movies-list__more-button\"],\n      onClick: loadMore,\n      children: \"\\u0415\\u0449\\u0451\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesCardsList, \"Gx8/4A7MP/uVqrbzXZoO4nQiyjU=\");\n_c = MoviesCardsList;\nexport default MoviesCardsList;\nvar _c;\n$RefreshReg$(_c, \"MoviesCardsList\");","map":{"version":3,"names":["React","useState","useEffect","MoviesCard","styles","jsxDEV","_jsxDEV","MoviesCardsList","movies","isSavedMoviesPage","_s","visibleCards","setVisibleCards","savedMovies","setSavedMovies","handleLikeClick","movie","isSaved","includes","filter","m","setInitialVisibleCards","width","window","innerWidth","initialVisibleCards","slice","addEventListener","removeEventListener","loadMore","additionalCards","current","length","className","children","map","index","movieName","movieImage","movieLink","onLike","isLiked","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dayana/dev/movies-explorer-frontend/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import MoviesCard from '../MoviesCard/MoviesCard.jsx';\n// import styles from './MoviesCardList.module.css';\n\n// function MoviesCardsList({ movies, isSavedMoviesPage }) {\n//   const [savedMovies, setSavedMovies] = useState([]);\n\n//   const handleLikeClick = (movie) => {\n//     // Проверяем, есть ли уже фильм в сохраненных\n//     const isSaved = savedMovies.includes(movie);\n    \n//     // Обновляем список сохраненных фильмов\n//     setSavedMovies(isSaved \n//       ? savedMovies.filter((m) => m !== movie) \n//       : [...savedMovies, movie]);\n//   };\n\n//   return (\n//     <section className={styles['movies-list']}>\n//       {movies.map((movie, index) => (\n//         <MoviesCard\n//           key={index}\n//           movieName={movie.movieName}\n//           movieImage={movie.movieImage}\n//           movieLink={movie.movieLink}\n//           onLike={() => handleLikeClick(movie)}\n//           isLiked={savedMovies.includes(movie)}\n//           movies={movies}\n//           isSavedMoviesPage={isSavedMoviesPage}\n//         />\n//       ))}\n     \n//         <button\n//           className={styles[\"movies-list__more-button\"]}\n//           type=\"button\"\n//         >\n//           Ещё\n//         </button>\n      \n//     </section>\n//   );\n// }\n\n// export default MoviesCardsList;\n\nimport React, { useState, useEffect } from 'react';\nimport MoviesCard from '../MoviesCard/MoviesCard.jsx';\nimport styles from './MoviesCardList.module.css';\n\nfunction MoviesCardsList({ movies, isSavedMoviesPage  }) {\n  const [visibleCards, setVisibleCards] = useState([]);\n    const [savedMovies, setSavedMovies] = useState([]);\n\n  const handleLikeClick = (movie) => {\n    // Проверяем, есть ли уже фильм в сохраненных\n    const isSaved = savedMovies.includes(movie);\n    \n    // Обновляем список сохраненных фильмов\n    setSavedMovies(isSaved \n      ? savedMovies.filter((m) => m !== movie) \n      : [...savedMovies, movie]);\n  };\n\n  useEffect(() => {\n    const setInitialVisibleCards = () => {\n      const width = window.innerWidth;\n      let initialVisibleCards;\n\n      if (width < 768) {\n        initialVisibleCards = 5;\n      } else if (width >= 768 && width < 1024) {\n        initialVisibleCards = 8;\n      } else {\n        initialVisibleCards = 16;\n      }\n\n      setVisibleCards(movies.slice(0, initialVisibleCards));\n    };\n\n    setInitialVisibleCards();\n    window.addEventListener('resize', setInitialVisibleCards);\n\n    return () => {\n      window.removeEventListener('resize', setInitialVisibleCards);\n    };\n  }, [movies]);\n\n  const loadMore = () => {\n    const width = window.innerWidth;\n    let additionalCards;\n\n    if (width < 768) {\n      additionalCards = 5;\n    } else if (width >= 768 && width < 1024) {\n      additionalCards = 8;\n    } else {\n      additionalCards = 16;\n    }\n\n    setVisibleCards(current => [\n      ...current,\n      ...movies.slice(current.length, current.length + additionalCards)\n    ]);\n  };\n\n  return (\n    <section className={styles[\"movies-list\"]}>\n      {visibleCards.map((movie, index) => (\n          <MoviesCard\n          key={index}\n          movieName={movie.movieName}\n          movieImage={movie.movieImage}\n          movieLink={movie.movieLink}\n          onLike={() => handleLikeClick(movie)}\n          isLiked={savedMovies.includes(movie)}\n          movies={movies}\n          isSavedMoviesPage={isSavedMoviesPage}\n        />\n      ))}\n      \n        <button className={styles[\"movies-list__more-button\"]} onClick={loadMore}>\n          Ещё\n        </button>\n\n    </section>\n  );\n}\n\nexport default MoviesCardsList;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}