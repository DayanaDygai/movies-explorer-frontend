{"ast":null,"code":"var _jsxFileName = \"/Users/dayana/dev/movies-explorer-frontend/movies-explorer-frontend/src/components/Register/Register.jsx\";\nimport React from 'react';\nimport AuthForm from '../AuthForm/AuthForm.jsx';\nimport Input from '../Input/Input.jsx';\n// import useFormValidation from '../../../hooks/useFormValidation';\n// import AppContext from '../../../Contexts/AppContext';\nimport styles from './Registration.module.scss'; // Импорт CSS-модулей\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration({\n  values,\n  valid,\n  errorMessages,\n  onChange,\n  onBlur\n}) {\n  // const REGEX_EMAIL = '^(?=.{1,64}@)[A-Za-z0-9_-]+(\\\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\\\.[A-Za-z0-9-]+)*(\\\\.[A-Za-z]{2,})$';\n  // const { setIsLoading } = useContext(AppContext);\n  // const { values, setValues, valid, errorMessages, setErrorMessages, onChange, onBlur } = useFormValidation();\n\n  // useEffect(() => {\n  //   setValues({ name: '', email: '', password: '' });\n  // }, []);\n\n  function onSubmit(e) {\n    e.preventDefault();\n  }\n\n  //   setIsLoading(true);\n  //   onRegister(values.name, values.email, values.password);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    formName: \"registration\",\n    title: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C!\",\n    btnText: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\",\n    onSubmit: onSubmit,\n    valid: valid,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      title: \"\\u0418\\u043C\\u044F\",\n      name: \"name\",\n      type: \"text\",\n      className: styles.input // Пример применения стилей\n      ,\n      addClassName: styles.inputDisplayBlock,\n      minLength: \"2\",\n      maxLength: \"40\",\n      value: values.name,\n      onChange: onChange,\n      onBlur: onBlur,\n      errorMessage: errorMessages.name,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      title: \"E-mail\",\n      name: \"email\",\n      type: \"email\",\n      className: styles.input,\n      addClassName: styles.inputDisplayBlock,\n      minLength: \"6\",\n      maxLength: \"40\",\n      value: values.email,\n      onChange: onChange,\n      onBlur: onBlur,\n      errorMessage: errorMessages.email,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      title: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      name: \"password\",\n      type: \"password\",\n      className: styles.input,\n      addClassName: styles.inputDisplayBlock,\n      minLength: \"6\",\n      maxLength: \"40\",\n      value: values.password,\n      onChange: onChange,\n      onBlur: onBlur,\n      errorMessage: errorMessages.password,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","AuthForm","Input","styles","jsxDEV","_jsxDEV","Registration","values","valid","errorMessages","onChange","onBlur","onSubmit","e","preventDefault","formName","title","btnText","children","name","type","className","input","addClassName","inputDisplayBlock","minLength","maxLength","value","errorMessage","required","fileName","_jsxFileName","lineNumber","columnNumber","email","password","_c","$RefreshReg$"],"sources":["/Users/dayana/dev/movies-explorer-frontend/movies-explorer-frontend/src/components/Register/Register.jsx"],"sourcesContent":["import React from 'react';\nimport AuthForm from '../AuthForm/AuthForm.jsx';\nimport Input from '../Input/Input.jsx';\n// import useFormValidation from '../../../hooks/useFormValidation';\n// import AppContext from '../../../Contexts/AppContext';\nimport styles from './Registration.module.scss'; // Импорт CSS-модулей\n\nfunction Registration({ values,\n  valid,\n  errorMessages,\n  onChange,\n  onBlur, }) {\n  // const REGEX_EMAIL = '^(?=.{1,64}@)[A-Za-z0-9_-]+(\\\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\\\.[A-Za-z0-9-]+)*(\\\\.[A-Za-z]{2,})$';\n  // const { setIsLoading } = useContext(AppContext);\n  // const { values, setValues, valid, errorMessages, setErrorMessages, onChange, onBlur } = useFormValidation();\n\n  // useEffect(() => {\n  //   setValues({ name: '', email: '', password: '' });\n  // }, []);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    }\n\n  //   setIsLoading(true);\n  //   onRegister(values.name, values.email, values.password);\n  // }\n\n  return (\n    <AuthForm\n      formName=\"registration\"\n      title=\"Добро пожаловать!\"\n      btnText=\"Зарегистрироваться\"\n      onSubmit={onSubmit}\n      valid={valid}\n    >\n      <Input\n        title=\"Имя\"\n        name=\"name\"\n        type=\"text\"\n        className={styles.input} // Пример применения стилей\n        addClassName={styles.inputDisplayBlock}\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={values.name}\n        onChange={onChange}\n        onBlur={onBlur}\n        errorMessage={errorMessages.name}\n        required\n      />\n      <Input\n        title=\"E-mail\"\n        name=\"email\"\n        type=\"email\"\n        className={styles.input}\n        addClassName={styles.inputDisplayBlock}\n        minLength=\"6\"\n        maxLength=\"40\"\n        value={values.email}\n        onChange={onChange}\n        onBlur={onBlur}\n        errorMessage={errorMessages.email}\n        required\n      />\n      <Input\n        title=\"Пароль\"\n        name=\"password\"\n        type=\"password\"\n        className={styles.input}\n        addClassName={styles.inputDisplayBlock}\n        minLength=\"6\"\n        maxLength=\"40\"\n        value={values.password}\n        onChange={onChange}\n        onBlur={onBlur}\n        errorMessage={errorMessages.password}\n        required\n      />\n    </AuthForm>\n  );\n}\n\nexport default Registration;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA;AACA,OAAOC,MAAM,MAAM,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,YAAYA,CAAC;EAAEC,MAAM;EAC5BC,KAAK;EACLC,aAAa;EACbC,QAAQ;EACRC;AAAQ,CAAC,EAAE;EACX;EACA;EACA;;EAEA;EACA;EACA;;EAEA,SAASC,QAAQA,CAACC,CAAC,EAAE;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB;;EAEF;EACA;EACA;;EAEA,oBACET,OAAA,CAACJ,QAAQ;IACPc,QAAQ,EAAC,cAAc;IACvBC,KAAK,EAAC,8FAAmB;IACzBC,OAAO,EAAC,8GAAoB;IAC5BL,QAAQ,EAAEA,QAAS;IACnBJ,KAAK,EAAEA,KAAM;IAAAU,QAAA,gBAEbb,OAAA,CAACH,KAAK;MACJc,KAAK,EAAC,oBAAK;MACXG,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAElB,MAAM,CAACmB,KAAM,CAAC;MAAA;MACzBC,YAAY,EAAEpB,MAAM,CAACqB,iBAAkB;MACvCC,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,IAAI;MACdC,KAAK,EAAEpB,MAAM,CAACY,IAAK;MACnBT,QAAQ,EAAEA,QAAS;MACnBC,MAAM,EAAEA,MAAO;MACfiB,YAAY,EAAEnB,aAAa,CAACU,IAAK;MACjCU,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA,CAACH,KAAK;MACJc,KAAK,EAAC,QAAQ;MACdG,IAAI,EAAC,OAAO;MACZC,IAAI,EAAC,OAAO;MACZC,SAAS,EAAElB,MAAM,CAACmB,KAAM;MACxBC,YAAY,EAAEpB,MAAM,CAACqB,iBAAkB;MACvCC,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,IAAI;MACdC,KAAK,EAAEpB,MAAM,CAAC2B,KAAM;MACpBxB,QAAQ,EAAEA,QAAS;MACnBC,MAAM,EAAEA,MAAO;MACfiB,YAAY,EAAEnB,aAAa,CAACyB,KAAM;MAClCL,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA,CAACH,KAAK;MACJc,KAAK,EAAC,sCAAQ;MACdG,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAElB,MAAM,CAACmB,KAAM;MACxBC,YAAY,EAAEpB,MAAM,CAACqB,iBAAkB;MACvCC,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,IAAI;MACdC,KAAK,EAAEpB,MAAM,CAAC4B,QAAS;MACvBzB,QAAQ,EAAEA,QAAS;MACnBC,MAAM,EAAEA,MAAO;MACfiB,YAAY,EAAEnB,aAAa,CAAC0B,QAAS;MACrCN,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEf;AAACG,EAAA,GAzEQ9B,YAAY;AA2ErB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}